Task 1: Install Ansible
- Install an Ansible Managed environment applying the following steps:
    - Create an Ansible control node and two managed nodes: ansible0.example.com and ansible1.example.com.
      Ensure on these servers that the user “ansible” exists to perform management tasks.
    - Create a project directory with the name plays, and in this project directory,
      create an inventory file to define the managed servers.
      Also, create a configuration file to automatically use that inventory file.
    - Run ad-hoc commands to set up all the required elements on the managed servers.

Task 2: Create playbook
- Create playbooks to set up an http server, an http client, and a site playbook to run these playbooks according
  to the following requirements:
    - Configure the inventory file, such that server1.example.com is part of the group webservers,
      and server2.example.com is part of the group webclients.
    - Ensure that the webclient.yml playbook installs the curl package. From the webserver.yml playbook,
      you need to install the httpd.conf web server.
    - Create a variables file that is called from both playbooks and is stored in the vars directory.
      In this file, the following variables must be set:
        web_client curl
        web_server httpd
        web_config_file /etc/httpd/conf/httpd.conf
- Create a template file in templates/httpd.j2 and use the template module to deploy this template to the
  location that is defined by the web_config_file variable. No specific modifications are required in the template file.
- Configure a handler that restarts the web server after successfully copying over the template.
- Also, from the webclient.yml playbook, do the following:
    - Install the web_server, using the variables you have defined.
    - Open a port in the firewalld firewall to allow access to the web server.
- In your project directory, create a site.yml file that includes webclient.yml and webserver.yml.

Task 3: Create role
- Convert the playbook that you have created in the previous task into an Ansible role.
  You will create a new playbook that calls this role in the next task. Create the role in the http project directory.

Task 4: Storage
- In the http project directory, create a playbook that activates the role and sets up storage according
  to the following requirements:
    - Run the parted command to set up the second disk with a partition.
      The command parted --script /dev/sdb mklabel gpt mkpart primary 1MiB 100% will do this for you.
    - Mount the new partition on the directory /web.
    - Set the SELinux type to httpd_sys_content_t on the /web directory.
    - Ensure that the file /web/index.html is created and shows the text “welcome to my custom web server”.
    - Use variables to refer to some items:
        - Web_dir is set to /web
        - Selinux_type is set to httpd_sys_content_t
        - Web_file points to /web/index.html